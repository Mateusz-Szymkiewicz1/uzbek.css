@use 'sass:math';

$utilities: (
  "padding": (
    "prefix": "p",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8
    ),
  ),
  "padding-left": (
    "prefix": "pl",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8
    ),
  ),
  "padding-right": (
    "prefix": "pr",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8
    ),
  ),
  "padding-top": (
    "prefix": "pt",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8
    ),
  ),
  "padding-bottom": (
    "prefix": "pb",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8
    ),
  ),
  "margin": (
    "prefix": "m",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8,
      "auto": auto,
    ),
  ),
  "margin-left": (
    "prefix": "ml",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8
    ),
  ),
  "margin-right": (
    "prefix": "mr",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8
    ),
  ),
  "margin-top": (
    "prefix": "mt",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8
    ),
  ),
  "margin-bottom": (
    "prefix": "mb",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8
    ),
  ),
  "opacity": (
    "prefix": "o",
    "values": (
      "0": 0,
      "10": 0.1,
      "20": 0.2,
      "30": 0.3,
      "40": 0.4,
      "50": 0.5,
      "60": 0.6,
      "70": 0.7,
      "80": 0.8,
      "90": 0.9,
      "100": 1,
    ),
  ),
  "display": (
    "prefix": "display",
    "values": (
      "n": none,
      "b": block,
      "f": flex,
      "i": inline,
      "i-b": inline-block
    )
  ),
  "font-size": (
    "prefix": "font",
    "values": (
      "xs": $font-size-xs,
      "sm": $font-size-sm,
      "md": $base-font-size,
      "lg": $font-size-lg,
      "xl": $font-size-xl,
      "xxl": $font-size-xxl
    )
  ),
  "font-weight": (
    "prefix": "font-weight",
    "values": (
      "100": 100,
      "200": 200,
      "300": 300,
      "400": 400,
      "500": 500,
      "600": 600,
      "700": 700,
      "800": 800,
    )
  ),
  "float": (
    "prefix": "float",
    "values": (
      "r": right,
      "l": left,
    )
  )
);

// generate utility classes
@each $property, $map in $utilities {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $k, $v in $values {
    @if($k == "default") {
      .#{$prefix} {
        #{$property}: $v;
      }
    } @else {
      .#{$prefix}-#{$k}{
        #{$property}: $v;
      }
    }
  }
}

@for $i from 0 through 5{
  @if($i > 0){
    .my-#{$i}{
      margin-top: $base-margin*math.pow(2,$i - 1);
      margin-bottom: $base-margin*math.pow(2,$i - 1);
    }
    .mx-#{$i}{
      margin-right: $base-margin*math.pow(2,$i - 1);
      margin-left: $base-margin*math.pow(2,$i - 1);
    }
    .py-#{$i}{
      padding-top: $base-margin*math.pow(2,$i - 1);
      padding-bottom: $base-margin*math.pow(2,$i - 1);
    }
    .px-#{$i}{
      padding-right: $base-margin*math.pow(2,$i - 1);
      padding-left: $base-margin*math.pow(2,$i - 1);
    }
  }@else{
    .my-#{$i}{
      margin-top: 0;
      margin-bottom: 0;
    }
    .mx-#{$i}{
      margin-right: 0;
      margin-left: 0;
    }
    .py-#{$i}{
      padding-top: 0;
      padding-bottom: 0;
    }
    .px-#{$i}{
      padding-right: 0;
      padding-left: 0;
    }
  }
}

.bs{
  box-shadow: $base-box-shadow;
}

.clear-both{
  clear: both;
}

.b-0{
  border: 0;
}

.b-t-0{
  border-top: 0;
}

.b-r-0{
  border-right: 0;
}

.b-b-0{
  border-bottom: 0;
}

.b-l-0{
  border-left: 0;
}

@each $key,$val in $colors{
  .b-#{$key}{
    border: 1px solid $val;
  }
  .b-t-#{$key}{
    border-top: 1px solid $val;
  }
   .b-r-#{$key}{
    border-right: 1px solid $val;
  }
   .b-b-#{$key}{
    border-bottom: 1px solid $val;
  }
   .b-l-#{$key}{
    border-left: 1px solid $val;
  }
}

@for $i from 1 through 20{
  .b-w-#{$i}{
    border-width: $i * 1px;
  }
}

.b-s-solid{
  border-style: solid;
}

.b-s-dotted{
  border-style: dotted;
}

.b-s-dashed{
  border-style: dashed;
}