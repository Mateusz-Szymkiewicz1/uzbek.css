@use 'sass:math';
$grid-columns: 12;
$grid-gaps: (
  "0": 0,
  "1": 10px,
  "2": 20px,
  "3": 30px
);
$layout_values: flex-start,flex-end,center,space-between,space-around;

.row{
  display: flex;
  flex-flow: row wrap;
}

@each $key,$val in $grid-gaps{
  .gap-#{$key} > *{
    padding: $val;
  }
  .gap-#{$key}{
    margin-left: -$val;
    margin-right: -$val;
  }
}

@each $val in $layout_values{
  .justify-#{$val}{
    justify-content: $val;
  }
}

@include xs{
  @for $i from 1 through $grid-columns{
    .col-#{$i}-xs{
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i*100%,$grid-columns);
    }
  }
}

@include sm{
  @for $i from 1 through $grid-columns{
    .col-#{$i}-sm{
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i*100%,$grid-columns);
    }
  }
}

@include md{
  @for $i from 1 through $grid-columns{
    .col-#{$i}-md{
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i*100%,$grid-columns);
    }
  }
}

@include lg{
  @for $i from 1 through $grid-columns{
    .col-#{$i}-lg{
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i*100%,$grid-columns);
    }
  }
}

@include xl{
  @for $i from 1 through $grid-columns{
    .col-#{$i}-xl{
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i*100%,$grid-columns);
    }
  }
}

.container{
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
    box-sizing: border-box;
}

.fixed{
  position: fixed !important;
}

$rounded-values: (
  "xs": 5px,
  "sm": 10px,
  "md": 20px,
  "lg": 50px,
  "xl": 100px
);

.rounded{
  border-radius: 50%;
}

@each $key,$val in $rounded-values{
  .rounded-#{$key}{
    border-radius: $val;
  }
}